@page "/"

<PageTitle>Palace Server - Dashboard</PageTitle>

<h2>Running services</h2>

<button class="btn btn-info" @onclick="@(() => { groupBy = "host";})">Group by Host</button>
<button class="btn btn-info" @onclick="@(() => { groupBy = "service";})">Group by Service</button>

@if (groupBy == "host")
{
    foreach (var host in RunningMicroServiceList.GroupBy(i => i.PalaceInfo))
    {
        <h3>@host.Key.Key (@host.Key.Ip)</h3>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th></th>
                    <th>Service Infos</th>
                    <th>Started Date</th>
                    <th>Last update date</th>
                    <th>Service State</th>
                    <th>Thread Count</th>
                    <th>Working Set</th>
                    <th>Env.</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in host.OrderBy(i => i.ServiceName))
                {
                    var workingSet = item.WorkingSet / 1024;
                    <tr @key=item class="@GetColor(host.Key, item)">
                        <td>
                            <button class="btn btn-primary" value=">" @onclick="@(() => DisplayMore(item))">+</button>
                        </td>
                        <td>
                            <b>@item.ServiceName</b> (@item.Version)<br/>
                        </td>
                        <td>@item.StartedDate</td>
                        <td>@item.LastUpdateDate</td>
                        <td><b>@item.ServiceState</b></td>
                        <td>@item.ThreadCount</td>
                        <td>@workingSet.ToString("###,###,###") K</td>
                        <td>@item.EnvironmentName</td>
                        <td>
                            @if (item.ServiceState == "Offline")
                            {
                                <button class="btn btn-primary" @onclick="() => Start(item)">Start</button>
                            }

                            @if (item.ServiceState == "Started")
                            {
                                <button class="btn btn-danger" @onclick="() => Stop(item)">Stop</button>
                            }
                        </td>
                    </tr>
					@if (item.UIDisplayMore)
                    {
                        <tr>
                            <td colspan="10">
                                Last Write Time : <b>@item.LastWriteTime</b><br/>
                                User Interactive : <b>@item.UserInteractive</b><br/>
                                Command Line : <b>@item.CommandLine</b><br/>
                                Process Id : <b>@item.ProcessId</b><br/>
                                AdminUrl : <b>@item.AdminUrl</b><br/>
                                PalaceClientVersion : <b>@item.PalaceClientVersion</b><br/>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
}
else if (groupBy == "service")
{
    foreach (var service in RunningMicroServiceList.GroupBy(i => i.ServiceName))
    {
        <h3>@service.Key</h3>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th></th>
                    <th>MachineName</th>
                    <th>Service Infos</th>
                    <th>Started Date</th>
                    <th>Last update date</th>
                    <th>Service State</th>
                    <th>Thread Count</th>
                    <th>Working Set</th>
                    <th>Env.</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in service.OrderBy(i => i.PalaceInfo.MachineName))
                {
                    var workingSet = item.WorkingSet / 1024;
                    <tr @key=item>
                        <td>
                            <button class="btn btn-primary" value=">" @onclick="@(() => DisplayMore(item))">+</button>
                        </td>
                        <td>
							@item.PalaceInfo.MachineName.@GetHostNameByIp(item.PalaceInfo.Ip)<br/>
							@item.PalaceInfo.Ip<br/>
                        </td>
                        <td>
                            <b>@item.ServiceName @item.Version</b> <br/>
                        </td>
                        <td>@item.StartedDate</td>
                        <td>@item.LastUpdateDate</td>
                        <td><b>@item.ServiceState</b></td>
                        <td>@item.ThreadCount</td>
                        <td>@workingSet.ToString("###,###,###") K</td>
                        <td>@item.EnvironmentName</td>
                        <td>
                            @if (item.ServiceState == "Offline")
                            {
                                <button class="btn btn-primary" @onclick="() => Start(item)">Start</button>
                            }

                            @if (item.ServiceState == "Started")
                            {
                                <button class="btn btn-danger" @onclick="() => Stop(item)">Stop</button>
                            }
                        </td>
                    </tr>
					@if (item.UIDisplayMore)
                    {
                        <tr>
                            <td colspan="10">
                                Last Write Time : <b>@item.LastWriteTime</b><br/>
                                User Interactive : <b>@item.UserInteractive</b><br/>
                                Command Line : <b>@item.CommandLine</b><br/>
                                Process Id : <b>@item.ProcessId</b><br/>
                                AdminUrl : <b>@item.AdminUrl</b><br/>
                                PalaceClientVersion : <b>@item.PalaceClientVersion</b><br/>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }

}

